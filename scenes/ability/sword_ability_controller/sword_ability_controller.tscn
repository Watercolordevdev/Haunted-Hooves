[gd_scene load_steps=3 format=3 uid="uid://b2tp1756sghd5"]

[ext_resource type="PackedScene" uid="uid://dvq6b0cog3h7l" path="res://scenes/ability/sword_ability/sword_ability.tscn" id="1_od137"]

[sub_resource type="GDScript" id="GDScript_4m7ta"]
script/source = "extends Node

const MAX_RANGE = 150

@export var sword_ability: PackedScene

func _ready():
	$Timer.timeout.connect(on_timer_timeout)
	pass
	
func on_timer_timeout():
	var player = get_tree().get_first_node_in_group(\"player\") as Node2D
	
	if player == null:
		return
		
	var enemies = get_tree().get_nodes_in_group(\"enemy\") as Array[Node2D]
	enemies = enemies.filter(func(enemy:Node2D): 
		return enemy.global_position.distance_squared_to(player.global_position) < pow(MAX_RANGE, 2)
		return false
	)
	
	if enemies.size() == 0:
		return
	
	enemies.sort_custom(func(a:Node2D, b:Node2D):
		var a_distance = a.global_position.distance_squared_to(player.global_position)
		var b_distance = b.global_position.distance_squared_to(player.global_position)
		return a_distance < b_distance
		)
	
	var sword_instance = sword_ability.instantiate() as Node2D
	
	player.get_parent().add_child(sword_instance)
	sword_instance.global_position = enemies[0].global_position
	sword_instance.global_position += Vector2.RIGHT.rotated(randf_range(0,TAU)) * 4

	var enemy_direction = enemies[0].global_position - sword_instance.global_position
	sword_instance.rotation = enemy_direction.angle()
"

[node name="SwordAbilityController" type="Node"]
script = SubResource("GDScript_4m7ta")
sword_ability = ExtResource("1_od137")

[node name="Timer" type="Timer" parent="."]
wait_time = 1.5
autostart = true
